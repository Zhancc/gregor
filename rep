
test：     文件格式 elf32-i386


Disassembly of section .init:

08048324 <_init>:
 8048324:	53                   	push   %ebx
 8048325:	83 ec 08             	sub    $0x8,%esp
 8048328:	e8 83 00 00 00       	call   80483b0 <__x86.get_pc_thunk.bx>
 804832d:	81 c3 d3 1c 00 00    	add    $0x1cd3,%ebx
 8048333:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048339:	85 c0                	test   %eax,%eax
 804833b:	74 05                	je     8048342 <_init+0x1e>
 804833d:	e8 1e 00 00 00       	call   8048360 <__gmon_start__@plt>
 8048342:	83 c4 08             	add    $0x8,%esp
 8048345:	5b                   	pop    %ebx
 8048346:	c3                   	ret    

Disassembly of section .plt:

08048350 <__gmon_start__@plt-0x10>:
 8048350:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048356:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804835c:	00 00                	add    %al,(%eax)
	...

08048360 <__gmon_start__@plt>:
 8048360:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048366:	68 00 00 00 00       	push   $0x0
 804836b:	e9 e0 ff ff ff       	jmp    8048350 <_init+0x2c>

08048370 <__libc_start_main@plt>:
 8048370:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048376:	68 08 00 00 00       	push   $0x8
 804837b:	e9 d0 ff ff ff       	jmp    8048350 <_init+0x2c>

Disassembly of section .text:

08048380 <_start>:
 8048380:	31 ed                	xor    %ebp,%ebp
 8048382:	5e                   	pop    %esi
 8048383:	89 e1                	mov    %esp,%ecx
 8048385:	83 e4 f0             	and    $0xfffffff0,%esp
 8048388:	50                   	push   %eax
 8048389:	54                   	push   %esp
 804838a:	52                   	push   %edx
 804838b:	68 70 86 04 08       	push   $0x8048670
 8048390:	68 00 86 04 08       	push   $0x8048600
 8048395:	51                   	push   %ecx
 8048396:	56                   	push   %esi
 8048397:	68 0d 85 04 08       	push   $0x804850d
 804839c:	e8 cf ff ff ff       	call   8048370 <__libc_start_main@plt>
 80483a1:	f4                   	hlt    
 80483a2:	66 90                	xchg   %ax,%ax
 80483a4:	66 90                	xchg   %ax,%ax
 80483a6:	66 90                	xchg   %ax,%ax
 80483a8:	66 90                	xchg   %ax,%ax
 80483aa:	66 90                	xchg   %ax,%ax
 80483ac:	66 90                	xchg   %ax,%ax
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <__x86.get_pc_thunk.bx>:
 80483b0:	8b 1c 24             	mov    (%esp),%ebx
 80483b3:	c3                   	ret    
 80483b4:	66 90                	xchg   %ax,%ax
 80483b6:	66 90                	xchg   %ax,%ax
 80483b8:	66 90                	xchg   %ax,%ax
 80483ba:	66 90                	xchg   %ax,%ax
 80483bc:	66 90                	xchg   %ax,%ax
 80483be:	66 90                	xchg   %ax,%ax

080483c0 <deregister_tm_clones>:
 80483c0:	b8 1b a0 04 08       	mov    $0x804a01b,%eax
 80483c5:	2d 18 a0 04 08       	sub    $0x804a018,%eax
 80483ca:	83 f8 06             	cmp    $0x6,%eax
 80483cd:	77 01                	ja     80483d0 <deregister_tm_clones+0x10>
 80483cf:	c3                   	ret    
 80483d0:	b8 00 00 00 00       	mov    $0x0,%eax
 80483d5:	85 c0                	test   %eax,%eax
 80483d7:	74 f6                	je     80483cf <deregister_tm_clones+0xf>
 80483d9:	55                   	push   %ebp
 80483da:	89 e5                	mov    %esp,%ebp
 80483dc:	83 ec 18             	sub    $0x18,%esp
 80483df:	c7 04 24 18 a0 04 08 	movl   $0x804a018,(%esp)
 80483e6:	ff d0                	call   *%eax
 80483e8:	c9                   	leave  
 80483e9:	c3                   	ret    
 80483ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080483f0 <register_tm_clones>:
 80483f0:	b8 18 a0 04 08       	mov    $0x804a018,%eax
 80483f5:	2d 18 a0 04 08       	sub    $0x804a018,%eax
 80483fa:	c1 f8 02             	sar    $0x2,%eax
 80483fd:	89 c2                	mov    %eax,%edx
 80483ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048402:	01 d0                	add    %edx,%eax
 8048404:	d1 f8                	sar    %eax
 8048406:	75 01                	jne    8048409 <register_tm_clones+0x19>
 8048408:	c3                   	ret    
 8048409:	ba 00 00 00 00       	mov    $0x0,%edx
 804840e:	85 d2                	test   %edx,%edx
 8048410:	74 f6                	je     8048408 <register_tm_clones+0x18>
 8048412:	55                   	push   %ebp
 8048413:	89 e5                	mov    %esp,%ebp
 8048415:	83 ec 18             	sub    $0x18,%esp
 8048418:	89 44 24 04          	mov    %eax,0x4(%esp)
 804841c:	c7 04 24 18 a0 04 08 	movl   $0x804a018,(%esp)
 8048423:	ff d2                	call   *%edx
 8048425:	c9                   	leave  
 8048426:	c3                   	ret    
 8048427:	89 f6                	mov    %esi,%esi
 8048429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048430 <__do_global_dtors_aux>:
 8048430:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 8048437:	75 13                	jne    804844c <__do_global_dtors_aux+0x1c>
 8048439:	55                   	push   %ebp
 804843a:	89 e5                	mov    %esp,%ebp
 804843c:	83 ec 08             	sub    $0x8,%esp
 804843f:	e8 7c ff ff ff       	call   80483c0 <deregister_tm_clones>
 8048444:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 804844b:	c9                   	leave  
 804844c:	f3 c3                	repz ret 
 804844e:	66 90                	xchg   %ax,%ax

08048450 <frame_dummy>:
 8048450:	a1 08 9f 04 08       	mov    0x8049f08,%eax
 8048455:	85 c0                	test   %eax,%eax
 8048457:	74 1f                	je     8048478 <frame_dummy+0x28>
 8048459:	b8 00 00 00 00       	mov    $0x0,%eax
 804845e:	85 c0                	test   %eax,%eax
 8048460:	74 16                	je     8048478 <frame_dummy+0x28>
 8048462:	55                   	push   %ebp
 8048463:	89 e5                	mov    %esp,%ebp
 8048465:	83 ec 18             	sub    $0x18,%esp
 8048468:	c7 04 24 08 9f 04 08 	movl   $0x8049f08,(%esp)
 804846f:	ff d0                	call   *%eax
 8048471:	c9                   	leave  
 8048472:	e9 79 ff ff ff       	jmp    80483f0 <register_tm_clones>
 8048477:	90                   	nop
 8048478:	e9 73 ff ff ff       	jmp    80483f0 <register_tm_clones>
 804847d:	66 90                	xchg   %ax,%ax
 804847f:	90                   	nop

08048480 <test>:
 8048480:	55                   	push   %ebp
 8048481:	89 e5                	mov    %esp,%ebp
 8048483:	57                   	push   %edi
 8048484:	56                   	push   %esi
 8048485:	83 ec 74             	sub    $0x74,%esp
 8048488:	8b 45 08             	mov    0x8(%ebp),%eax
 804848b:	8d 55 94             	lea    -0x6c(%ebp),%edx
 804848e:	c7 45 84 64 00 00 00 	movl   $0x64,-0x7c(%ebp)
 8048495:	89 c1                	mov    %eax,%ecx
 8048497:	83 e1 01             	and    $0x1,%ecx
 804849a:	85 c9                	test   %ecx,%ecx
 804849c:	74 0f                	je     80484ad <test+0x2d>
 804849e:	0f b6 0a             	movzbl (%edx),%ecx
 80484a1:	88 08                	mov    %cl,(%eax)
 80484a3:	83 c0 01             	add    $0x1,%eax
 80484a6:	83 c2 01             	add    $0x1,%edx
 80484a9:	83 6d 84 01          	subl   $0x1,-0x7c(%ebp)
 80484ad:	89 c1                	mov    %eax,%ecx
 80484af:	83 e1 02             	and    $0x2,%ecx
 80484b2:	85 c9                	test   %ecx,%ecx
 80484b4:	74 10                	je     80484c6 <test+0x46>
 80484b6:	0f b7 0a             	movzwl (%edx),%ecx
 80484b9:	66 89 08             	mov    %cx,(%eax)
 80484bc:	83 c0 02             	add    $0x2,%eax
 80484bf:	83 c2 02             	add    $0x2,%edx
 80484c2:	83 6d 84 02          	subl   $0x2,-0x7c(%ebp)
 80484c6:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
 80484c9:	c1 e9 02             	shr    $0x2,%ecx
 80484cc:	89 c7                	mov    %eax,%edi
 80484ce:	89 d6                	mov    %edx,%esi
 80484d0:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 80484d2:	89 f2                	mov    %esi,%edx
 80484d4:	89 f8                	mov    %edi,%eax
 80484d6:	b9 00 00 00 00       	mov    $0x0,%ecx
 80484db:	8b 75 84             	mov    -0x7c(%ebp),%esi
 80484de:	83 e6 02             	and    $0x2,%esi
 80484e1:	85 f6                	test   %esi,%esi
 80484e3:	74 0b                	je     80484f0 <test+0x70>
 80484e5:	0f b7 34 0a          	movzwl (%edx,%ecx,1),%esi
 80484e9:	66 89 34 08          	mov    %si,(%eax,%ecx,1)
 80484ed:	83 c1 02             	add    $0x2,%ecx
 80484f0:	8b 75 84             	mov    -0x7c(%ebp),%esi
 80484f3:	83 e6 01             	and    $0x1,%esi
 80484f6:	85 f6                	test   %esi,%esi
 80484f8:	74 07                	je     8048501 <test+0x81>
 80484fa:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx
 80484fe:	88 14 08             	mov    %dl,(%eax,%ecx,1)
 8048501:	8b 45 08             	mov    0x8(%ebp),%eax
 8048504:	83 c4 74             	add    $0x74,%esp
 8048507:	5e                   	pop    %esi
 8048508:	5f                   	pop    %edi
 8048509:	5d                   	pop    %ebp
 804850a:	c2 04 00             	ret    $0x4

0804850d <main>:
 804850d:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048511:	83 e4 f0             	and    $0xfffffff0,%esp
 8048514:	ff 71 fc             	pushl  -0x4(%ecx)
 8048517:	55                   	push   %ebp
 8048518:	89 e5                	mov    %esp,%ebp
 804851a:	57                   	push   %edi
 804851b:	56                   	push   %esi
 804851c:	51                   	push   %ecx
 804851d:	81 ec 7c 01 00 00    	sub    $0x17c,%esp
 8048523:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 804852a:	eb 12                	jmp    804853e <main+0x31>
 804852c:	8d 95 78 ff ff ff    	lea    -0x88(%ebp),%edx
 8048532:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048535:	01 d0                	add    %edx,%eax
 8048537:	c6 00 54             	movb   $0x54,(%eax)
 804853a:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 804853e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048541:	83 f8 63             	cmp    $0x63,%eax
 8048544:	76 e6                	jbe    804852c <main+0x1f>
 8048546:	c6 45 e3 63          	movb   $0x63,-0x1d(%ebp)
 804854a:	a1 94 86 04 08       	mov    0x8048694,%eax
 804854f:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048552:	d9 45 dc             	flds   -0x24(%ebp)
 8048555:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax
 8048559:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 804855f:	8d 8d 08 ff ff ff    	lea    -0xf8(%ebp),%ecx
 8048565:	89 8d 00 ff ff ff    	mov    %ecx,-0x100(%ebp)
 804856b:	dd 9c 24 80 00 00 00 	fstpl  0x80(%esp)
 8048572:	c7 44 24 7c 02 00 00 	movl   $0x2,0x7c(%esp)
 8048579:	00 
 804857a:	c7 44 24 78 04 00 00 	movl   $0x4,0x78(%esp)
 8048581:	00 
 8048582:	8d 54 24 14          	lea    0x14(%esp),%edx
 8048586:	8d b5 78 ff ff ff    	lea    -0x88(%ebp),%esi
 804858c:	b8 19 00 00 00       	mov    $0x19,%eax
 8048591:	89 d7                	mov    %edx,%edi
 8048593:	89 c1                	mov    %eax,%ecx
 8048595:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8048597:	c7 44 24 10 64 00 00 	movl   $0x64,0x10(%esp)
 804859e:	00 
 804859f:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 80485a5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80485a9:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 80485b0:	00 
 80485b1:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 80485b8:	00 
 80485b9:	8b 8d 00 ff ff ff    	mov    -0x100(%ebp),%ecx
 80485bf:	89 0c 24             	mov    %ecx,(%esp)
 80485c2:	e8 b9 fe ff ff       	call   8048480 <test>
 80485c7:	83 ec 04             	sub    $0x4,%esp
 80485ca:	8d 95 78 ff ff ff    	lea    -0x88(%ebp),%edx
 80485d0:	8d b5 08 ff ff ff    	lea    -0xf8(%ebp),%esi
 80485d6:	b8 19 00 00 00       	mov    $0x19,%eax
 80485db:	89 d7                	mov    %edx,%edi
 80485dd:	89 c1                	mov    %eax,%ecx
 80485df:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 80485e1:	b8 00 00 00 00       	mov    $0x0,%eax
 80485e6:	8d 65 f4             	lea    -0xc(%ebp),%esp
 80485e9:	59                   	pop    %ecx
 80485ea:	5e                   	pop    %esi
 80485eb:	5f                   	pop    %edi
 80485ec:	5d                   	pop    %ebp
 80485ed:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80485f0:	c3                   	ret    
 80485f1:	66 90                	xchg   %ax,%ax
 80485f3:	66 90                	xchg   %ax,%ax
 80485f5:	66 90                	xchg   %ax,%ax
 80485f7:	66 90                	xchg   %ax,%ax
 80485f9:	66 90                	xchg   %ax,%ax
 80485fb:	66 90                	xchg   %ax,%ax
 80485fd:	66 90                	xchg   %ax,%ax
 80485ff:	90                   	nop

08048600 <__libc_csu_init>:
 8048600:	55                   	push   %ebp
 8048601:	57                   	push   %edi
 8048602:	31 ff                	xor    %edi,%edi
 8048604:	56                   	push   %esi
 8048605:	53                   	push   %ebx
 8048606:	e8 a5 fd ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804860b:	81 c3 f5 19 00 00    	add    $0x19f5,%ebx
 8048611:	83 ec 1c             	sub    $0x1c,%esp
 8048614:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048618:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 804861e:	e8 01 fd ff ff       	call   8048324 <_init>
 8048623:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 8048629:	29 c6                	sub    %eax,%esi
 804862b:	c1 fe 02             	sar    $0x2,%esi
 804862e:	85 f6                	test   %esi,%esi
 8048630:	74 27                	je     8048659 <__libc_csu_init+0x59>
 8048632:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048638:	8b 44 24 38          	mov    0x38(%esp),%eax
 804863c:	89 2c 24             	mov    %ebp,(%esp)
 804863f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048643:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048647:	89 44 24 04          	mov    %eax,0x4(%esp)
 804864b:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 8048652:	83 c7 01             	add    $0x1,%edi
 8048655:	39 f7                	cmp    %esi,%edi
 8048657:	75 df                	jne    8048638 <__libc_csu_init+0x38>
 8048659:	83 c4 1c             	add    $0x1c,%esp
 804865c:	5b                   	pop    %ebx
 804865d:	5e                   	pop    %esi
 804865e:	5f                   	pop    %edi
 804865f:	5d                   	pop    %ebp
 8048660:	c3                   	ret    
 8048661:	eb 0d                	jmp    8048670 <__libc_csu_fini>
 8048663:	90                   	nop
 8048664:	90                   	nop
 8048665:	90                   	nop
 8048666:	90                   	nop
 8048667:	90                   	nop
 8048668:	90                   	nop
 8048669:	90                   	nop
 804866a:	90                   	nop
 804866b:	90                   	nop
 804866c:	90                   	nop
 804866d:	90                   	nop
 804866e:	90                   	nop
 804866f:	90                   	nop

08048670 <__libc_csu_fini>:
 8048670:	f3 c3                	repz ret 
 8048672:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

08048674 <_fini>:
 8048674:	53                   	push   %ebx
 8048675:	83 ec 08             	sub    $0x8,%esp
 8048678:	e8 33 fd ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804867d:	81 c3 83 19 00 00    	add    $0x1983,%ebx
 8048683:	83 c4 08             	add    $0x8,%esp
 8048686:	5b                   	pop    %ebx
 8048687:	c3                   	ret    
